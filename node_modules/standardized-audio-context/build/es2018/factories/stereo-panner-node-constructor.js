import { getNativeContext } from '../helpers/get-native-context';
const DEFAULT_OPTIONS = {
    channelCount: 2,
    /*
     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent
     * behavior.
     */
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    pan: 0
};
export const createStereoPannerNodeConstructor = (createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {
    return class StereoPannerNode extends noneAudioDestinationNodeConstructor {
        constructor(context, options = DEFAULT_OPTIONS) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = Object.assign({}, DEFAULT_OPTIONS, options);
            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const stereoPannerNodeRenderer = (isOffline) ? createStereoPannerNodeRenderer() : null;
            super(context, nativeStereoPannerNode, stereoPannerNodeRenderer);
            // Bug #106: Edge does not export a maxValue and minValue property.
            this._pan = createAudioParam(context, isOffline, nativeStereoPannerNode.pan, 1, -1);
        }
        get pan() {
            return this._pan;
        }
    };
};
//# sourceMappingURL=/build/es2018/factories/stereo-panner-node-constructor.js.map