import { getNativeAudioNode } from '../helpers/get-native-audio-node';
import { isOwnedByContext } from '../helpers/is-owned-by-context';
import { renderInputsOfAudioNode } from '../helpers/render-inputs-of-audio-node';
export const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode) => {
    return () => {
        let nativeWaveShaperNodePromise = null;
        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {
            let nativeWaveShaperNode = getNativeAudioNode(proxy);
            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.
            if (!isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext)) {
                const options = {
                    channelCount: nativeWaveShaperNode.channelCount,
                    channelCountMode: nativeWaveShaperNode.channelCountMode,
                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,
                    curve: nativeWaveShaperNode.curve,
                    oversample: nativeWaveShaperNode.oversample
                };
                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);
            }
            if (nativeWaveShaperNode.inputs !== undefined) {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);
            }
            else {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);
            }
            return nativeWaveShaperNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext) {
                if (nativeWaveShaperNodePromise === null) {
                    nativeWaveShaperNodePromise = createWaveShaperNode(proxy, nativeOfflineAudioContext);
                }
                return nativeWaveShaperNodePromise;
            }
        };
    };
};
//# sourceMappingURL=/build/es2018/factories/wave-shaper-node-renderer-factory.js.map