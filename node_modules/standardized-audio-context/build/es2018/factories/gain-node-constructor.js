import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';
import { getNativeContext } from '../helpers/get-native-context';
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    gain: 1
};
export const createGainNodeConstructor = (createAudioParam, createGainNodeRenderer, createNativeGainNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {
    return class GainNode extends noneAudioDestinationNodeConstructor {
        constructor(context, options = DEFAULT_OPTIONS) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = Object.assign({}, DEFAULT_OPTIONS, options);
            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const gainNodeRenderer = (isOffline) ? createGainNodeRenderer() : null;
            super(context, nativeGainNode, gainNodeRenderer);
            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue.
            this._gain = createAudioParam(context, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
        }
        get gain() {
            return this._gain;
        }
    };
};
//# sourceMappingURL=/build/es2018/factories/gain-node-constructor.js.map